{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Filter","text","onChange","console","log","PersonForm","onSubmit","onChangeName","onChangeNumber","id","type","Persons","name","number","handleDelete","onClick","baseUrl","axios","get","then","response","data","newObject","post","delete","newContact","put","Notification","message","cName","className","App","useState","persons","setPersons","filterString","setFilterString","setMessage","newName","setNewName","newNumber","setNewNumber","useEffect","contactService","returnedContacts","replacePerson","foundPerson","modifiedPerson","returnedPerson","map","person","setNotification","catch","error","filter","setTimeout","personsToShow","toUpperCase","includes","event","target","value","preventDefault","newPerson","find","window","confirm","concat","document","getElementById","key","p","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f1f9034.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ text, onChange }) => {\r\n  console.log('Filter-komponentti kutsuttu!')\r\n  return (\r\n    <div>{text} <input onChange={onChange} /></div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = ({ onSubmit, onChangeName, onChangeNumber }) => {\r\n  console.log('PersonForm kutsuttu!');\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div>name: <input id='name' onChange={onChangeName} /></div>\r\n      <div>number: <input id='number' onChange={onChangeNumber} /></div>\r\n      <button type='submit'>add</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Persons = ({ name, number, handleDelete }) => {\r\n  console.log('Persons propsit: ', name, number, handleDelete);\r\n\r\n  return (\r\n    <>\r\n      <p>{name} {number} <button type='button' onClick={handleDelete}>Delete</button></p>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addNew = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst replaceContact = (id, newContact) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newContact)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, addNew, deletePerson, replaceContact}","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    console.log('Notificationin props: ', message.text, message.cName);\r\n    \r\n    if (message.text === null || message.cName === null) {\r\n        return null\r\n    } else {\r\n        return (\r\n            <div className={message.cName}>\r\n                {message.text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [filterString, setFilterString] = useState('')\n  const [message, setMessage] = useState({ text: null, cName: null })\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const hook = () => {\n    console.log('effect');\n    contactService\n      .getAll()\n      .then(returnedContacts => {\n        console.log('promise fulfilled')\n        setPersons(returnedContacts)\n      })\n  }\n  useEffect(hook, [])\n\n  const addName = (event) => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber }\n\n    const newPersonisOnTheList = persons.find(person => person.name.toUpperCase() === newPerson.name.toUpperCase())\n\n    if (newPersonisOnTheList) {\n      const foundPerson = persons.find(person => person.name.toUpperCase() === newPerson.name.toUpperCase())\n      const modifiedPerson = { ...newPerson }\n      const confirm = window.confirm(\n        `${foundPerson.name} is already added to phonebook, replace the old number with a new one?`)\n\n      if (confirm) replacePerson(foundPerson, modifiedPerson);\n\n    } else {\n      contactService\n        .addNew(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`Added ${newPerson.name}`, 'success');\n        })\n    }\n    document.getElementById('name').value = '';\n    document.getElementById('number').value = '';\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterString(event.target.value.toUpperCase())\n  }\n\n  const handleDelete = (person) => {\n    const confirmDel = window.confirm(`Delete ${person.name}?`)\n    if (confirmDel) {\n      contactService\n        .deletePerson(person.id)\n        .then(setPersons(persons.filter(p => p.id !== person.id)))\n\n      setNotification(`Deleted ${person.name}`, 'success')\n    }\n  }\n\n  const replacePerson = (foundPerson, modifiedPerson) => {\n    contactService\n      .replaceContact(foundPerson.id, modifiedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(person => person.id !== foundPerson.id ? person : returnedPerson))\n\n        setNotification(`Updated ${foundPerson.name}`, 'success')\n      })\n      .catch(error => {\n        console.log('virhe')\n        setNotification(`Information of ${foundPerson.name} has \n            already been removed from server`, 'error')\n\n        setPersons(persons.filter(person => person.id !== foundPerson.id))\n      })\n  };\n\n\n  const setNotification = ((text, cName) => {\n    setMessage({ text: text, cName: cName })\n    setTimeout(() => {\n      setMessage({ text: null, cName: null })\n    }, 5000)\n  });\n\n  const onChangeName = (event) => {\n    console.log(event.target.value);\n    setNewName(event.target.value)\n  }\n\n  const onChangeNumber = (event) => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  }\n\n  const personsToShow = filterString === ''\n    ? persons\n    : persons.filter(person => person.name.toUpperCase().includes(filterString) || person.number.includes(filterString))\n\n  return (\n\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n\n      <Filter text='filter shown with' onChange={handleFilterChange} />\n\n      <h3>Add a new person</h3>\n\n      <PersonForm onSubmit={addName} onChangeName={onChangeName} onChangeNumber={onChangeNumber} />\n\n      <h3>Numbers</h3>\n\n      {personsToShow.map((person) =>\n        <Persons key={person.name} name={person.name} number={person.number}\n          handleDelete={() => handleDelete(person)} />\n      )}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}